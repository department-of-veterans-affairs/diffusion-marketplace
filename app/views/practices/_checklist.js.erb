var CHARACTER_COUNTER_VALID_COLOR =  '#a9aeb1';
var CHARACTER_COUNTER_INVALID_COLOR = '#e52207';
var MAX_LENGTH = 50;

function getResourceNameCharacterCountOnPageLoad() {

    <% @practice.additional_resources.each do |ar| %>
        var resourceInput = $("input[counter-id='resource_<%= ar.id %>_name']");
        var resourceNameCharacterSpan = $("#resource_<%= ar.id %>_name_character_count");
        var resourceNameCurrentLength = resourceInput.val().length;
        var resourceNameCharacterCount = '(' + resourceNameCurrentLength + '/' + MAX_LENGTH + ' characters)';

        resourceNameCharacterSpan.text(resourceNameCharacterCount);

        if (resourceNameCurrentLength >= MAX_LENGTH) {
            resourceNameCharacterSpan.css('color', CHARACTER_COUNTER_INVALID_COLOR);
        }
    <% end %>
}

function resourceNameCharacterCounter() {
    $(document).on('input', '.resource-name-input', function(e) {
        var t = e.target;
        var currentLength = $(t).val().length;

        var resourceNameCharacterSpan = $(t).closest('div').find('.resource-name-character-count');
        var characterCounter = '(' + currentLength + '/' + MAX_LENGTH + ' characters)';

        resourceNameCharacterSpan.css('color', CHARACTER_COUNTER_VALID_COLOR);
        resourceNameCharacterSpan.text(characterCounter);

        if (currentLength >= MAX_LENGTH) {
            resourceNameCharacterSpan.css('color', CHARACTER_COUNTER_INVALID_COLOR);
        }
    });
}

function getResourceDescriptionCharacterCountOnPageLoad() {

    <% @practice.additional_resources.each do |ar| %>
        var resourceInput = $("input[counter-id='resource_<%= ar.id %>_description']");
        var resourceDescriptionCharacterSpan = $("#resource_<%= ar.id %>_description_character_count");
        var resourceDescriptionCurrentLength = resourceInput.val().length;
        var resourceDescriptionCharacterCount = '(' + resourceDescriptionCurrentLength + '/' + MAX_LENGTH + ' characters)';

        resourceDescriptionCharacterSpan.text(resourceDescriptionCharacterCount);

        if (resourceDescriptionCurrentLength >= MAX_LENGTH) {
            resourceDescriptionCharacterSpan.css('color', CHARACTER_COUNTER_INVALID_COLOR);
        }
    <% end %>
}

function resourceDescriptionCharacterCounter() {
    $(document).on('input', '.resource-description', function(e) {
        var t = e.target;
        var currentLength = $(t).val().length;

        var resourceDescriptionCharacterSpan = $(t).closest('div').find('.resource-description-character-count');
        var characterCounter = '(' + currentLength + '/' + MAX_LENGTH + ' characters)';

        resourceDescriptionCharacterSpan.css('color', CHARACTER_COUNTER_VALID_COLOR);
        resourceDescriptionCharacterSpan.text(characterCounter);

        if (currentLength >= MAX_LENGTH) {
            resourceDescriptionCharacterSpan.css('color', CHARACTER_COUNTER_INVALID_COLOR);
        }
    });
}

function getPermissionNameCharacterCountOnPageLoad() {

    <% @practice.practice_permissions.each do |pp| %>
        var permissionInput = $("input[counter-id='permission_<%= pp.id %>_name']");
        var permissionNameCharacterSpan = $("#permission_<%= pp.id %>_name_character_count");
        var permissionNameCurrentLength = permissionInput.val().length;
        var permissionNameCharacterCount = '(' + permissionNameCurrentLength + '/' + MAX_LENGTH + ' characters)';

        permissionNameCharacterSpan.text(permissionNameCharacterCount);

        if (permissionNameCurrentLength >= MAX_LENGTH) {
            permissionNameCharacterSpan.css('color', CHARACTER_COUNTER_INVALID_COLOR);
        }
    <% end %>
}

function permissionNameCharacterCounter() {
    $(document).on('input', '.permission-name-input', function(e) {
        var t = e.target;
        var currentLength = $(t).val().length;

        var permissionNameCharacterSpan = $(t).closest('div').find('.permission-name-character-count');
        var characterCounter = '(' + currentLength + '/' + MAX_LENGTH + ' characters)';

        permissionNameCharacterSpan.css('color', CHARACTER_COUNTER_VALID_COLOR);
        permissionNameCharacterSpan.text(characterCounter);

        if (currentLength >= MAX_LENGTH) {
            permissionNameCharacterSpan.css('color', CHARACTER_COUNTER_INVALID_COLOR);
        }
    });
}

function getPermissionDescriptionCharacterCountOnPageLoad() {

    <% @practice.practice_permissions.each do |pp| %>
        var permissionInput = $("input[counter-id='permission_<%= pp.id %>_description']");
        var permissionDescriptionCharacterSpan = $("#permission_<%= pp.id %>_description_character_count");
        var permissionDescriptionCurrentLength = permissionInput.val().length;
        var permissionDescriptionCharacterCount = '(' + permissionDescriptionCurrentLength + '/' + MAX_LENGTH + ' characters)';

        permissionDescriptionCharacterSpan.text(permissionDescriptionCharacterCount);

        if (permissionDescriptionCurrentLength >= MAX_LENGTH) {
            permissionDescriptionCharacterSpan.css('color', CHARACTER_COUNTER_INVALID_COLOR);
        }
    <% end %>
}

function permissionDescriptionCharacterCounter() {
    $(document).on('input', '.permission-description', function(e) {
        var t = e.target;
        var currentLength = $(t).val().length;

        var permissionDescriptionCharacterSpan = $(t).closest('div').find('.permission-description-character-count');
        var characterCounter = '(' + currentLength + '/' + MAX_LENGTH + ' characters)';

        permissionDescriptionCharacterSpan.css('color', CHARACTER_COUNTER_VALID_COLOR);
        permissionDescriptionCharacterSpan.text(characterCounter);

        if (currentLength >= MAX_LENGTH) {
            permissionDescriptionCharacterSpan.css('color', CHARACTER_COUNTER_INVALID_COLOR);
        }
    });
}

function showAdditionalResourcesFieldsOnPageLoad() {
    <% if @practice.additional_resources.empty? %>
        $('.add-resource-link').click();
        $('.practice-editor-resource-li ').appendTo('#sortable_resources');
        initSortable('#sortable_resources');
    <% end %>
}

function showPermissionsFieldsOnPageLoad() {
    <% if @practice.practice_permissions.empty? %>
        $('.add-permission-link').click();
        $('.practice-editor-permission-li ').appendTo('#sortable_permissions');
        initSortable('#sortable_permissions');
    <% end %>
}

function executeChecklistFunctions() {
    getResourceNameCharacterCountOnPageLoad();
    getResourceDescriptionCharacterCountOnPageLoad();
    resourceNameCharacterCounter();
    resourceDescriptionCharacterCounter();
    getPermissionNameCharacterCountOnPageLoad();
    getPermissionDescriptionCharacterCountOnPageLoad();
    permissionNameCharacterCounter();
    permissionDescriptionCharacterCounter();
    showAdditionalResourcesFieldsOnPageLoad();
    showPermissionsFieldsOnPageLoad();
}

$(document).on('turbolinks:load', executeChecklistFunctions);