# TODO: get the placeholder how active admin does "NEW_#{association_human_name.upcase.split(' ').join('_')}_RECORD"
placeholder ||= 'NEW_PAGE_COMPONENT_RECORD'
component ||= nil

html = Arbre::Context.new do
  li "", id: "PageTwoToOneImageComponent_poly_#{placeholder}", class: "input polyform component-#{placeholder}" do
    fieldset class: "inputs" do
      legend do
        span '2:1 Image to Text'
      end

      if component
        input type: 'hidden', value: component.id, name: "page[page_components_attributes][#{placeholder}][component_attributes][id]"
      end

      ol do
        li class: 'string input optional stringish title-container', id: "page_page_components_attributes_#{placeholder}_component_attributes_title_input" do
          label 'Title', for: "page_page_components_attributes_#{placeholder}_component_attributes_title", class: 'label'

          input value: component&.title || nil,
            id: "page_page_components_attributes_#{placeholder}_component_attributes_title",
            name: "page[page_components_attributes][#{placeholder}][component_attributes][title]",
            type: 'text'
          para 'Title', class: 'inline-hints'
        end

        li class: 'string input optional stringish url-container', id: "page_page_components_attributes_#{placeholder}_component_attributes_url_input" do
          label 'URL', for: "page_page_components_attributes_#{placeholder}_component_attributes_url", class: 'label'
          input value: component&.url || nil, type: 'text',
            id: "page_page_components_attributes_#{placeholder}_component_attributes_url",
            name: "page[page_components_attributes][#{placeholder}][component_attributes][url]"
          para class: 'inline-hints' do
            span 'For external URLs, enter a complete URL (Ex: "https://www.va.gov", "https://google.com").'
            span 'For internal URLs, simply enter a suffix to any internal page of the marketplace (Ex: "/innovations/vione", "/partners", "/covid-19/telehealth").'
          end
        end

        li class: 'string input optional stringish url-link-text-container',
          id: "page_page_components_attributes_#{placeholder}_component_attributes_url_link_text_input" do
          label 'URL link text', for: "page_page_components_attributes_#{placeholder}_component_attributes_url_link_text", class: 'label'
          input value: component&.url_link_text || nil, type: 'text',
            id: "page_page_components_attributes_#{placeholder}_component_attributes_url_link_text",
            name: "page[page_components_attributes][#{placeholder}][component_attributes][url_link_text]"
          para 'Enter the text that will displayed for the link to the URL above', class: 'inline-hints'
        end

        li class: 'string input optional stringish text-container', id: "page_page_components_attributes_#{placeholder}_component_attributes_text_input" do
          label 'Text', for: "page_page_components_attributes_two_to_one_image_#{placeholder}_component_attributes_text", class: 'label'

          textarea component&.text || nil,
            id: "page_page_components_attributes_two_to_one_image_#{placeholder}_component_attributes_text",
            name: "page[page_components_attributes][#{placeholder}][component_attributes][text]",
            class: 'tinymce two-to-one-image-component-text',
            rows:'18' do
              component&.send(:text).try :html_safe
            end
          para 'Text Body', class: 'inline-hints'
        end

        li class: 'select input required text-alignment-container', id: "page_page_components_attributes_#{placeholder}_component_attributes_text_alignment_input" do
          label 'Text alignment', for: "page_page_components_attributes_#{placeholder}_component_attributes_text_alignment", class: 'label'
          select value: component&.text_alignment || nil,
            id: "page_page_components_attributes_#{placeholder}_component_attributes_text_alignment",
            name: "page[page_components_attributes][#{placeholder}][component_attributes][text_alignment]" do
            option 'Left', selected: component&.text_alignment === 'Left' || component&.text_alignment.blank?
            option 'Right', selected: component&.text_alignment === 'Right'
          end
          para "Choose the text alignment for this '2:1 Image to Text' component (left or right). Defaults to left.",
            class: 'inline-hints'
        end

        li class: 'file input required', id: "page_page_components_attributes_#{placeholder}_component_attributes_image_input" do
          label 'Image', for: "page_page_components_attributes_#{placeholder}_component_attributes_image", class: 'label'
          input value: component&.image_file_name || nil, type: 'file', required: 'required', accept: '.jpg, .jpeg, .png',
            id: "page_page_components_attributes_#{placeholder}_component_attributes_image",
            name: "page[page_components_attributes][#{placeholder}][component_attributes][image]"
          para 'File types allowed: jpg, png. Max file size: 25MB', class: 'inline-hints'
        end

        if component&.image.present?
          li do
            div class: 'page-image-preview-container no-padding' do
              div class: 'placeholder'
              div class: 'page-image-container' do
                img class: 'page-image', src: component.image_s3_presigned_url, alt: component.image_alt_text
                para "Current image name: #{component.image_file_name}"
              end
            end
          end
        end

        li class: 'string input required stringish', id: "page_page_components_attributes_#{placeholder}_component_attributes_image_alt_text_input" do
          label 'Alternative Text', for: "page_page_components_attributes_#{placeholder}_component_attributes_image_alt_text", class: 'label'
          input value: component&.image_alt_text || nil, type: 'text', required: 'required',
            id: "page_page_components_attributes_#{placeholder}_component_attributes_image_alt_text",
            name: "page[page_components_attributes][#{placeholder}][component_attributes][image_alt_text]"
          para 'Alternate text that gets rendered in case the image cannot load.', class: 'inline-hints'
        end

        li class: 'checkbox input optional', id: "page_page_components_attributes_#{placeholder}_component_attributes_flipped_ratio" do
          if component
            input type: 'hidden', value: '0', name: "page[page_components_attributes][#{placeholder}][component_attributes][flipped_ratio]"
          end
          label 'Flip Image To Text Ratio', for: "page_page_components_attributes_#{placeholder}_component_attributes_flipped_ratio", class: 'label padding-top-0'
          input value: '1', type: 'checkbox', checked: component&.flipped_ratio?,
                id: "page_page_components_attributes_#{placeholder}_component_attributes_flipped_ratio",
                name: "page[page_components_attributes][#{placeholder}][component_attributes][flipped_ratio]",
                class: 'toggle-has-flipped_ratio'
          para 'Flip the 2:1 ratio so the text column is twice the width of the image', class: 'inline-hints'
        end
      end

      a 'Move to Top', href: '#', class: 'move-to-top float-right', id: component&.page_component&.id
    end
  end
end

return html.to_s