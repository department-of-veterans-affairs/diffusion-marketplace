var practices = <%= @practices_json %>;
var results = null;


//function test() {
//    // Remove no search items content
    <%# if request.url.include?('query') %>
//      $('#no-search-query-content')
    <%# end %>
//}

function searchPracticesPage() {
    const searchField = document.querySelector('#dm-practice-search-field');

    // Skip if not the search page
    if (location.pathname !== '/search') return;

    // Search helper functions

    // Search practices and populate the page
    function search(query, filters) {
        console.log('query', query)

        // Trim whitespace from the query (can cause matching problems)
//        query = query.trim();

        // Set variables
        var resultsHTML = '';
        var resultsSummary = document.querySelector('#results-summary');
        var searchResults = document.querySelector('#search-results');

        // set the search page search bar input value
        searchField.value = query;

        var categoryFilters = []
        filters.forEach(function(categorySelection) {
            categoryFilters.push({'category_names': categorySelection})
        })

        // Run the search query
        if (query == '' && categoryFilters.length > 0) {
            results = fuse.search({$or: categoryFilters})
        } else if (query !== '' && categoryFilters.length > 0) {
            var searchBarQueryArray = []
            search_options.keys.forEach(function(practiceKey) {
                var queryObj = {}
                queryObj[practiceKey] = query
                searchBarQueryArray.push(queryObj)
            })
            console.log('array', searchBarQueryArray)
            results = fuse.search({
                $and: [
                    {
                        $or: searchBarQueryArray
                    },
                    {
                        $and: categoryFilters
                    }
                ]
            })
        } else {
            results = fuse.search(query)
        }

        console.log('results', results)

        console.log(results.length);

        // Show the results summary section
        document.getElementById('dm-search-practices').classList.remove('display-none')

        // Print the number of results for the query
        resultsSummary.innerHTML = results.length + ' result' + (results.length === 1 ? '' : 's');

        // Highlight results (only Fuse.js matching)
        results.forEach(function (result) {
            highlighter(result);
        });

        // Template out the search results
        results.forEach(function (result) {
            var practiceImage = result.item.image
            var practiceName = result.item.name
            var noBackgroundImage = practiceImage ? '' : 'class: fas fa-images fa-3x text-base-lighter search-no-image';
            var background = practiceImage ? 'background: url(' + practiceImage + ')' + ' transparent; background-repeat: no-repeat; background-position: center; background-size: cover;' : 'background-color: #f0f0f0; transparent; background-size: contain; background-repeat: no-repeat; background-position: center; ';
            var favoriteButtonIcon = result.item.user_favorited ? 'fas' : 'far';
            var practiceLinkClass = practiceImage ? '' : ' dm-alt-practice-link'
            var favoriteButton =
                '<a aria-label="Bookmark ' + practiceName + '" tabindex="-1" aria-hidden="true" class="dm-practice-bookmark-btn" id="dm-bookmark-button-' + result.item.id + '" data-remote="true" rel="nofollow" data-method="post" href="/practices/' + result.item.slug + '/favorite.js">' +
                '<i class="' + favoriteButtonIcon + ' fa-bookmark dm-favorite-icon-' + result.item.id + ' text-no-underline"></i>' +
                '</a>';
            var cardImageHtml =
                '<div class="dm-practice-card-img-container">' +
                '<img alt="' + practiceName + ' Marketplace Card Image" class="grid-row marketplace-card-img radius-top-sm" src="' + practiceImage + '">' +
                '</div>'
            var noCardImageHtml =
                '<div class="dm-bg-gray-80">' +
                '<h3 class="text-normal font-sans-lg dm-practice-title multiline-ellipses-2 margin-x-2 margin-y-4">' +
                practiceName +
                '</h3>' +
                '</div>'
            var cardImage = practiceImage ? cardImageHtml : noCardImageHtml
            var practiceNameHeader =
                '<h3 class="text-normal font-sans-lg dm-practice-title multiline-ellipses-2 margin-top-0 margin-bottom-2">' +
                practiceName +
                '</h3>'
            var assignPracticeHeader = practiceImage ? practiceNameHeader : ''
            resultsHTML +=
                '<div class="dm-practice-card padding-y-105">' +
                <% if current_user.present? %>
                favoriteButton +
                <% end %>
                '<a href="/practices/' + result.item.slug + '" aria-label="Go to ' + result.item.name + '" aria-hidden="true" class="dm-practice-link' + practiceLinkClass + '">' +
                '<div class=" dm-practice-card-container">' +
                cardImage +
                '<div class="padding-105 height-card-mobile">' +
                assignPracticeHeader +
                '<div>' +
                '<p class="multiline-ellipses-1 font-sans-sm practice-card-tagline">' + result.item.tagline + '</p>' +
                '</div>' +
                '<div class="dm-practice-card-origin margin-bottom-2">' +
                '<span class="line-clamp-2 font-sans-3xs text-gray-50 multiline-ellipses-3 line-height-sans-205 dm-practice-card-origin-info">' +
                'Created in ' + result.item.date_initiated + ' ' + result.item.initiating_facility +
                '</span>' +
                '</div>' +
                '</div>' +
                '</div>' +
                '</a>' +
                '</div>';

                '<!-- Uncomment to show Fuse.js diagnostics -->' +
                '<!--' +
                '<h3>Fuse.js highlighted character matching</h3>' +
                '<p class="">' + result.highlight + '</p>' +
                '<p><b>Score: ' + result.score + '</b></p>' +
                '-->'
        });

        // Print results to the page
        searchResults.innerHTML = resultsHTML;

        // Highlight search results where exact keyword matches
        var mark = new Mark('#search-results');
        mark.mark(query);
    }


    // Highlight Fuse.js results
    // Adapted from: https://github.com/brunocechet/Fuse.js-with-highlight
    function highlighter(resultItem) {
        resultItem.matches.forEach(function (matchItem) {
            // don't highlight if match was on category since category is not in practice search result text and can't be highlighted
            if (matchItem.key != 'category_names') {
                var text = resultItem.item[matchItem.key];
                var result = [];
                var matches = [].concat(matchItem.indices); // limpar referencia
                var pair = matches.shift();

                for (var i = 0; i < text.length; i++) {
                    var char = text.charAt(i);
                    if (pair && i === pair[0]) {
                        result.push('<mark>')
                    }
                    result.push(char);
                    if (pair && i === pair[1]) {
                        result.push('</mark>');
                        pair = matches.shift()
                    }
                }
                resultItem.highlight = result.join('');

                if (resultItem.children && resultItem.children.length > 0) {
                    resultItem.children.forEach(function (child) {
                        highlighter(child);
                    });
                }
            }
        });
    }


    // Set up search

    // Set Fuse.js search options
    var search_options = {
        keys: ['name', 'tagline', 'description', 'summary', 'initiating_facility', 'category_names', 'maturity_level'],
        minMatchCharLength: 1,
        tokenize: true,
        shouldSort: true,
        threshold: 0.2,
        location: 0,
        distance: 100,
        maxPatternLength: 32,
        matchAllTokens: true,
        findAllMatches: true,
        includeMatches: true,
        includeScore: true,
        useExtendedSearch: true
    };


    // Create a search context with practices and search options
    var fuse = new Fuse(practices, search_options);
    console.log('fuse', fuse)

    // Set up "enter" event handler for search field
    var timeout = null;

//    $(document).on('submit', '#dm-practice-search-form', function (e) {
//        e.preventDefault();

//        // Make a new timeout set to go off in 500ms
//        timeout = setTimeout(function () {
//            search(searchField.value);
//            window.history.pushState("", "", '/search?query=' + searchField.value);
//            trackSearchField(decodeURI(searchField.value));
//        }, 500);

//    });

    $(document).on('submit', '#update-search-results-form', function (e) {
        e.preventDefault();
        var chosen_categories = $('#update-search-results-form [type="checkbox"]:checked').map(function () {
            return this.value;
        }).get();

        var searchBarText = $('#dm-practice-search-field').val().trim()

        if (searchBarText.length > 0) {
            search(searchField.value, chosen_categories)
        } else {
            search('', chosen_categories)
        }
    });

    if (window.location.pathname === '/search' && window.location.search !== '') {
        const query = window.location.search.split('=')[1];
        search(decodeURI(query));
        trackSearchField(decodeURI(query));
        searchField.value = decodeURI(query);
    }
}

function trackSearchField(searchTerm) {
    if (searchTerm !== '') {
        ahoy.track('Practice search', {search_term: searchTerm});
        if (typeof ga === 'function') {
            ga('send', {
                hitType: 'event',
                eventCategory: 'search',
                eventAction: 'search',
                location: '/search?query=' + searchTerm
            });
        }
    }
}

document.addEventListener('turbolinks:load', function () {
    searchPracticesPage();
});
