# TODO: get the placeholder how active admin does "NEW_#{association_human_name.upcase.split(' ').join('_')}_RECORD"
placeholder ||= 'NEW_PAGE_COMPONENT_RECORD' # = "NEW_#{association_human_name.upcase.split(' ').join('_')}_RECORD"
component ||= nil
html = Arbre::Context.new do
  li "", id: "PageSimpleButtonComponent_poly_#{placeholder}", class: "input polyform component-#{placeholder}" do
    fieldset class: "inputs" do
      legend do
        span 'Simple Button'
      end
      ol do
        if component
          input type: 'hidden', value: component.id, name: "page[page_components_attributes][#{placeholder}][component_attributes][id]"
        end

        a 'Move to Top', href: '#', class: 'move-to-top float-right', id: component&.page_component&.id

        # Title
        li class: 'string input required stringish', id: "page_page_components_attributes_#{placeholder}_component_attributes_button_text_input" do
          label 'Button Text', for: "page_page_components_attributes_#{placeholder}_component_attributes_button_text", class: 'label'
          input value: component&.button_text || nil, type: 'text', required: 'required',
                id: "page_page_components_attributes_#{placeholder}_component_attributes_button_text",
                name: "page[page_components_attributes][#{placeholder}][component_attributes][button_text]"
        end

        # URL
        li class: 'string input required stringish', id: "page_page_components_attributes_#{placeholder}_component_attributes_url_input" do
          label 'Button URL', for: "page_page_components_attributes_#{placeholder}_component_attributes_url"
          input value: component&.url || nil, type: 'text', required: 'required',
                id: "page_page_components_attributes_#{placeholder}_component_attributes_url",
                name: "page[page_components_attributes][#{placeholder}][component_attributes][url]"
          para 'e.g. /about, https://www.va.gov/', class: 'inline-hints'
        end
      end
    end
  end
end

return html.to_s
