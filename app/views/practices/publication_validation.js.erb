var publicationValidation = {
    form: '#form',
    modal: '#practiceEditorPublicationModal',
    practiceSlug: '<%= @practice.slug %>',
    hideModal: 'publication-modal-hidden',
    scrollPosition: 0,
    body: 'body'
};

function changeActionUrl(ele, urlSlug) {
    $(ele).attr('action', `/innovations/${urlSlug}`);
}

function preventScrolling() {
    publicationValidation.scrollPosition = $(window).scrollTop();
    $(publicationValidation.body).css('top', `-${publicationValidation.scrollPosition}px`);
    addClassToElement(publicationValidation.body, 'overflow-y-scroll');
    addClassToElement(publicationValidation.body, 'position-fixed');
    addClassToElement(publicationValidation.body, 'width-full');
}

function enableScrolling() {
    removeClassFromElement(publicationValidation.body, 'overflow-y-scroll');
    removeClassFromElement(publicationValidation.body, 'position-fixed');
    removeClassFromElement(publicationValidation.body, 'width-full');
    $(publicationValidation.body).css('top', '');
    $(window).scrollTop(publicationValidation.scrollPosition);
}

// only append the publication modal once
if (!$(publicationValidation.modal).length) {
    $('#main-content').after("<%= escape_javascript(render partial: 'practices/publication_validation_modal', formats: [ :html ]) %>");
}

// display the modal and remove the ability to scroll
$(publicationValidation.modal).removeClass(publicationValidation.hideModal);
preventScrolling();

function hidePublicationModal() {
    addClassToElement(publicationValidation.modal, publicationValidation.hideModal);
    enableScrolling();
}

function hidePublicationModalOnButtonClick() {
    $(document).on('click', '.back-to-editor-button, .close-publication-modal', function () {
        hidePublicationModal();
        changeActionUrl(publicationValidation.form, publicationValidation.practiceSlug);
    });
}

// close the publication modal when the user clicks anywhere outside of it
function hidePublicationModalOnBodyElementClick() {
    $(publicationValidation.body).off().on('click', function (e) {
        if ($(e.target).parent().attr('id') === 'practiceEditorPublicationModal') {
            hidePublicationModal();
        }
    });
}

function submitFormOnButtonClick() {
    $(document).on('click', '#publication-modal-save-button', function () {
        hidePublicationModal();
        changeActionUrl(publicationValidation.form, publicationValidation.practiceSlug);
        /*
          add a hidden input to the form. Design wants the user to be redirected to the practice's show page after clicking 'Save as draft and exit', so this will allow us to have an identifier in
          the params that will let us check if the request is being sent from the publish modal.
        */
        let hiddenInput = 'publication-modal-hidden-input';
        $('<input />')
            .attr('type', 'hidden')
            .attr('name', 'publish_modal_save')
            .attr('value', true)
            .addClass(hiddenInput)
            .appendTo(publicationValidation.form);
        validateForm({form: $(publicationValidation.form), railsFireEvent: false});
        // remove the hidden input
        $(`.${hiddenInput}`).remove();
    });
}

function execPublicationValidationFunctions() {
    hidePublicationModalOnButtonClick();
    hidePublicationModalOnBodyElementClick();
    submitFormOnButtonClick();
}

$(execPublicationValidationFunctions);