# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
workflows:
    version: 2
    test:
      jobs:
        - test
jobs:
  test:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.6.3-node-browsers
        environment:
          RAILS_ENV: test
          MAX_THREADS: 2
          WEB_CONCURRENCY: 1

          POSTGRES_PASSWORD: mysecretlocalpassword
          POSTGRES_USER: postgres
          POSTGRES_DB: web_app
          POSTGRES_HOST: 127.0.0.1
          POSTGRES_PORT: 5432

          REDIS_HOST: redis_test
          REDIS_PORT: 6379
          REDIS_DB_ID: 0

          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_PASSWORD: mysecretlocalpassword
          POSTGRES_USER: postgres
          POSTGRES_DB: web_app

      - image: redis

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install qt5-default libqt5webkit5-dev gstreamer1.0-plugins-base gstreamer1.0-tools gstreamer1.0-x
            gem install bundler
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: bundle exec rails db:create
      - run: bundle exec rails db:schema:load

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $TEST_FILES
      - run:
          name: run security scanner
          command: |
            mkdir /tmp/security-report
            bundle exec brakeman --exit-on-warn -o /tmp/security-report/report.json

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_test_results:
          path: /tmp/security-report
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - store_artifacts:
          path: /tmp/security-report
          destination: security-report
      - store_artifacts:
          path: coverage
          destination: coverage
