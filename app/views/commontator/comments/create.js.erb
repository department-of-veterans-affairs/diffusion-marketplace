                          console.log('Mutation Observer');
                          window.MutationObserver = window.MutationObserver
                            || window.WebKitMutationObserver
                            || window.MozMutationObserver;
<%#                          // Find the element that you want to "watch"%>
                          var target = document.getElementById('commontator-comment-<%= @comment.parent_id %>-children'),
<%#// create an observer instance%>
                            observer = new MutationObserver(function(mutation) {
<%#                              /** this is the callback where you
                               do what you need to do.
                               The argument is an array of MutationRecords where the affected attribute is
                               named "attributeName". There is a few other properties in a record
                               but I'll let you work it out yourself.
                               **/%>
                              console.log('mutation', mutation)
                            }),
<%#// configuration of the observer:%>
                            config = {
                              attributes: true <%#// this is to watch for attribute changes.%>
                            };
<%#                          // pass in the element you wanna watch as well as the options
                          observer.observe(target, config);
                          // later, you can stop observing
                          // observer.disconnect();%>
                          console.log('target', target);



var showChildren = <%= @comment.parent_id.present? && params[:show_children] == 'true' %>;

console.log('show children', showChildren)

var reloadWithTurbolinks = (function () {
  var scrollPosition;

  function reload () {
    scrollPosition = [window.scrollX, window.scrollY];
    Turbolinks.visit(window.location.toString(), { action: 'replace' });
  }

  document.addEventListener('turbolinks:load', function () {
    if (scrollPosition) {
      window.scrollTo.apply(window, scrollPosition);
      scrollPosition = null;
    }
  })

  return reload
})()
<%=
  if @comment.parent.nil?
    partial = 'threads'
    extra_locals = {}
    id = "commontator-thread-#{@commontator_thread.id}-new-comment"
  else
    partial = 'comments'
    extra_locals = { comment: @comment.parent }
    id = "commontator-comment-#{@comment.parent.id}-reply"
  end

  render partial: "commontator/#{partial}/show", locals: extra_locals.merge(
    user: @commontator_user,
    thread: @commontator_thread,
    page: @commontator_page,
    show_all: @commontator_show_all
  )
%>

<% if @commontator_new_comment.nil? %>
  $("#<%= id %>-link").fadeIn();
<% else %>
  $("#<%= id %>").html("<%= escape_javascript(
    render partial: 'form', locals: {
      comment: @commontator_new_comment, thread: @commontator_thread
    }
  ) %>");
<% end %>

$('.timeago').timeago();

<%= javascript_proc %>

<% if params[:refresh_page] %>
  reloadWithTurbolinks();

  <% if @comment.parent_id %>
    if (showChildren) {
      console.log('In show children callback')
      $(document).on('turbolinks:load', () => {
        $('#commontator-comment-<%= @comment.id %>').parent().removeClass('hidden');
      })
    }
  <% end %>
<% end %>







