
error_log  /home/nginx/log/error.log;
pid        /var/run/web-nginx.pid;

events {
  worker_connections  8096;
  multi_accept        on;
  use                 epoll;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  client_max_body_size 1000M;
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /home/nginx/log/access.log  main;

  sendfile           on;
  tcp_nopush         on;
  tcp_nodelay        on;
  keepalive_timeout  10;

  upstream appserver {
    server app:3000;
  }
  server {
    listen 8080;
    # define your domain
    server_name $URL_from_env;
    # define the public application root
    root /home/nginx/www/public;
    index  index.html;
    # define where Nginx should write its logs
    # TODO: This isn't working :(
    # access_log /var/www/logs/nginx.access.log;
    # error_log /var/www/logs/nginx.error.log;

    add_header 'X-UA-Compatible' 'IE=edge';

    # deny requests for files that should never be accessed
    location ~ /\. {
      deny all;
    }
    location ~* ^.+\.(rb|log)$ {
      deny all;
    }

    # serve static (compiled) assets directly if they exist
    location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/   {
      try_files $uri @app;
      access_log off;
      gzip_static on;
      # to serve pre-gzipped version
      expires max;
      add_header Cache-Control public;

      add_header Last-Modified "";
      add_header ETag "";
      break;
    }

    # send non-static file requests to the app server
    location / {
      try_files $uri @app;
    }
    location @app {
      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://appserver;
    }
  }
}