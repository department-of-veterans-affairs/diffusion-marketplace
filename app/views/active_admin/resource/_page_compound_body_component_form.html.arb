# TODO: get the placeholder how active admin does "NEW_#{association_human_name.upcase.split(' ').join('_')}_RECORD"
placeholder ||= 'NEW_PAGE_COMPONENT_RECORD'
component ||= nil

html = Arbre::Context.new do
  div class: 'dm-page-compound-body-component-container position-relative' do
    li "", id: "PageCompoundBodyComponent_poly_#{placeholder}", class: "input polyform component-#{placeholder}" do
      fieldset class: "inputs" do
        legend do
          span 'Compound body component'
        end

        if component
          input type: 'hidden', value: component.id, name: "page[page_components_attributes][#{placeholder}][component_attributes][id]"
        end
        ol do
          li class: 'string input optional stringish', id: "page_page_components_attributes_#{placeholder}_component_attributes_title_input" do
            # Title
            label 'Title', for: "page_page_components_attributes_#{placeholder}_component_attributes_title", class: 'label'

            input value: component&.title || nil,
              id: "page_page_components_attributes_#{placeholder}_component_attributes_title",
              name: "page[page_components_attributes][#{placeholder}][component_attributes][title]",
              type: 'text'
          end

          li class: 'string input optional stringish', id: "page_page_components_attributes_#{placeholder}_component_attributes_text_input" do
            label 'Text', for: "page_page_components_attributes_compound_body_#{placeholder}_component_attributes_text", class: 'label'

            textarea component&.text, id: "page_page_components_attributes_compound_body_#{placeholder}_component_attributes_text", name: "page[page_components_attributes][#{placeholder}][component_attributes][text]", class: 'tinymce', rows:'18' do
                component&.send(:text).try :html_safe
            end
            para 'Supplementary text to title', class: 'inline-hints'
          end

          li class: 'string input optional stringish', id: "page_page_components_attributes_#{placeholder}_component_attributes_url_input" do
            label 'URL', for: "page_page_components_attributes_#{placeholder}_component_attributes_url", class: 'label'
            input value: component&.url || nil, type: 'text', required: 'required',
                  id: "page_page_components_attributes_#{placeholder}_component_attributes_url",
                  name: "page[page_components_attributes][#{placeholder}][component_attributes][url]"
            para class: 'inline-hints' do
              span 'For external URLs, enter a complete URL (Ex: "https://www.va.gov", "https://google.com").'
              span 'For internal URLs, simply enter a suffix to any internal page of the marketplace (Ex: "/innovations/vione", "/partners", "/covid-19/telehealth").'
            end
          end

          li class: 'select input', id: "page_page_components_attributes_#{placeholder}_component_attributes_text_alignment_input" do
            label 'Alignment', for: "page_page_components_attributes_#{placeholder}_component_attributes_text_alignment", class: 'label'
            select value: component&.text_alignment || nil,
                   id: "page_page_components_attributes_#{placeholder}_component_attributes_text_alignment",
                   name: "page[page_components_attributes][#{placeholder}][component_attributes][text_alignment]" do
              option 'Left', selected: component&.text_alignment === 'Left' || component&.text_alignment.blank?
              option 'Right', selected: component&.text_alignment === 'Right'
            end
            para "Choose the text alignment for this 'Compound Body' component (left or right). Defaults to left.", class: 'inline-hints'
          end

          div class: 'page-component-images-header display-flex flex-align-center' do
            span 'Page component images'
          end

          ol id: "page_page_components_attributes_#{placeholder}_page_component_images_ol", class: 'page-component-images-ol' do
            page_component_images = component&.page_component&.page_component_images
            if component && page_component_images&.any?
              page_component_images.each_with_index do |pci, index|
                li id: "page_page_components_attributes_#{placeholder}_page_component_images_#{index}_li border-bottom-2",
                   'data-id': "page_component_image_#{placeholder}_li",
                   class: 'page-component-image-li' do
                  input type: 'hidden',
                        value: pci.id,
                        name: "page[page_components_attributes][#{placeholder}][page_component_images_attributes][#{index}][id]"

                  div class: 'page-component-image-attribute-container' do
                    label 'Image *Required*',
                          for: "page_page_components_attributes_#{placeholder}_page_component_images_attributes_#{index}_image",
                          class: 'label'
                    input value: pci.image_file_name, type: 'file', accept: '.jpg, .jpeg, .png',
                          id: "page_page_components_attributes_#{placeholder}_page_component_images_attributes_#{index}_image",
                          name: "page[page_components_attributes][#{placeholder}][page_component_images_attributes][#{index}][image]",
                          class: 'margin-0',
                          required: 'required'
                    para 'File types allowed: jpg, png. Max file size: 25MB', class: 'inline-hints'
                  end

                  if pci.image.present?
                    div class: 'page-component-image-preview-container' do
                      div class: 'placeholder'
                      div class: 'page-component-image-container' do
                        img class: 'page-component-image', src: pci.image_s3_presigned_url, alt: pci.alt_text
                      end
                    end
                  end

                  div class: 'page-component-image-attribute-container' do
                    label 'Image URL', for: "page_page_components_attributes_#{placeholder}_page_component_images_attributes_#{index}_url", class: 'label'
                    input value: pci.url || nil, type: 'text',
                          id: "page_page_components_attributes_#{placeholder}_page_component_images_attributes_#{index}_url",
                          name: "page[page_components_attributes][#{placeholder}][page_component_images_attributes][#{index}][url]"
                    para class: 'inline-hints' do
                      span 'For external URLs, enter a complete URL (Ex: "https://www.va.gov", "https://google.com").'
                      span 'For internal URLs, simply enter a suffix to any internal page of the marketplace (Ex: "/innovations/vione", "/partners", "/covid-19/telehealth").'
                    end
                  end

                  div class: 'page-component-image-attribute-container' do
                    label 'Caption',
                          for: "page_page_components_attributes_compound_body_#{placeholder}_page_component_images_attributes_#{index}_caption",
                          class: 'label'

                    textarea pci.caption,
                             id: "page_page_components_attributes_compound_body_#{placeholder}_page_component_images_attributes_#{index}_caption",
                             name: "page[page_components_attributes][#{placeholder}][page_component_images_attributes][#{index}][caption]",
                             class: 'tinymce',
                             rows:'18'
                    para 'Text that accurately describes the image', class: 'inline-hints'
                  end

                  div class: 'page-component-image-attribute-container' do
                    label 'Alternative Text *Required*',
                          for: "page_page_components_attributes_#{placeholder}_page_component_images_attributes_#{index}_alt_text",
                          class: 'label'
                    input value: pci.alt_text, type: 'text', required: 'required',
                          id: "page_page_components_attributes_#{placeholder}_page_component_images_attributes_#{index}_alt_text",
                          name: "page[page_components_attributes][#{placeholder}][page_component_images_attributes][#{index}][alt_text]"
                    para 'Alternate text that gets rendered in case the image cannot load', class: 'inline-hints'
                  end

                  div class: 'display-flex flex-justify-end' do
                    div class: 'trash-container' do
                      input type: 'hidden',
                            value: '0',
                            id: "page_page_components_attributes_#{placeholder}_page_component_images_attributes_#{index}__destroy",
                            name: "page[page_components_attributes][#{placeholder}][page_component_images_attributes][#{index}][_destroy]"
                      a class: 'dm-page-builder-trash',
                             href: 'javascript:void(0)' do
                        span 'Delete entry'
                      end
                    end
                  end

                  unless page_component_images.length === index + 1
                    div class: 'add-another-separator border-y-1px border-gray-5 margin-top-2'
                  end
                end
              end
            end
          end

          a class: 'add-another-page-component-image position-absolute cursor-pointer', 'data-add-another': "#{placeholder}", href: 'javascript:void(0)' do
            span 'Add Image'
          end
        end
      end
    end
  end
end

return html.to_s