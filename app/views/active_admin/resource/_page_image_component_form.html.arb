# TODO: get the placeholder how active admin does "NEW_#{association_human_name.upcase.split(' ').join('_')}_RECORD"
placeholder ||= 'NEW_PAGE_COMPONENT_RECORD' # = "NEW_#{association_human_name.upcase.split(' ').join('_')}_RECORD"
component ||= nil
html = Arbre::Context.new do
  li "", id: "PageImageComponent_poly_#{placeholder}", class: 'input polyform component-#{placeholder}' do
    fieldset class: "inputs" do
      legend do
        span 'Image'
      end
      ol do
        if component
          input type: 'hidden', value: component.id, name: "page[page_components_attributes][#{placeholder}][component_attributes][id]"
          li do
            img class: 'max-width-15 max-height-15', src: component.page_image_s3_presigned_url, alt: component.alt_text
            para "Current image name: #{component.page_image_file_name}"
          end
        end
        li class: 'select input optional', id: "page_page_components_attributes_#{placeholder}_component_attributes_alignment_input" do
          label 'Alignment', for: "page_page_components_attributes_#{placeholder}_component_attributes_alignment", class: 'label'
          select value: component&.alignment || 'center',
                id: "page_page_components_attributes_#{placeholder}_component_attributes_alignment",
                name: "page[page_components_attributes][#{placeholder}][component_attributes][alignment]" do
            option ''
            %w(left center right).each do |h|
              option h.capitalize, value: h, selected: component.present? ? component&.alignment == h : h == 'center'
            end
          end
        end
        li class: 'file input required', id: "page_page_components_attributes_#{placeholder}_component_attributes_page_image_input" do
          label 'Image', for: "page_page_components_attributes_#{placeholder}_component_attributes_page_image", class: 'label'
          input value: component&.page_image || nil, type: 'file', required: 'required', accept: '.jpg, .jpeg, .png',
                id: "page_page_components_attributes_#{placeholder}_component_attributes_page_image",
                name: "page[page_components_attributes][#{placeholder}][component_attributes][page_image]"
          para 'File types allowed: jpg, png. Max file size: 25MB', class: 'inline-hints'
        end
        li class: 'string input required stringish', id: "page_page_components_attributes_#{placeholder}_component_attributes_alt_text_input" do
          label 'Alternative Text', for: "page_page_components_attributes_#{placeholder}_component_attributes_alt_text", class: 'label'
          input value: component&.alt_text || nil, type: 'text', required: 'required',
                id: "page_page_components_attributes_#{placeholder}_component_attributes_alt_text",
                name: "page[page_components_attributes][#{placeholder}][component_attributes][alt_text]"
          para 'Alternate text that gets rendered in case the image cannot load.', class: 'inline-hints'
        end
        li class: 'url input required stringish', id: "page_page_components_attributes_#{placeholder}_component_attributes_url_input" do
          label 'Url', for: "page_page_components_attributes_#{placeholder}_component_attributes_url", class: 'label'
          input value: component&.url || nil, type: 'text',
                id: "page_page_components_attributes_#{placeholder}_component_attributes_url",
                name: "page[page_components_attributes][#{placeholder}][component_attributes][url]"
          para 'Enter a URL suffix to any internal page of the marketplace (Ex: "/innovations/vione", "/partners", "/covid-19/telehealth" or a complete external URL (Ex. https://www.va.gov/) that you would like the image to link to', class: 'inline-hints'
        end
      end
    end
  end
end

f.template.concat(html.to_s)
