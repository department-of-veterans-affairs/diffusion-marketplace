# TODO: get the placeholder how active admin does "NEW_#{association_human_name.upcase.split(' ').join('_')}_RECORD"
placeholder ||= 'NEW_PAGE_COMPONENT_RECORD' # = "NEW_#{association_human_name.upcase.split(' ').join('_')}_RECORD"
component ||= nil
html = Arbre::Context.new do
  li "", id: "PageHeader3Component_poly_#{placeholder}", class: "input polyform component-#{placeholder}" do
    fieldset class: "inputs" do
      legend do
        span 'Heading 3'
      end
      ol do
        if component
          input type: 'hidden', value: component.id, name: "page[page_components_attributes][#{placeholder}][component_attributes][id]"
        end
        li class: 'string input optional stringish', id: "page_page_components_attributes_#{placeholder}_component_attributes_title_input" do
          label 'Title', for: "page_page_components_attributes_#{placeholder}_component_attributes_title", class: 'label'
          input value: component&.title || nil, type: 'text', required: 'required',
                id: "page_page_components_attributes_#{placeholder}_component_attributes_title",
                name: "page[page_components_attributes][#{placeholder}][component_attributes][title]"
          para 'Section header styled as secondary heading/"H3"', class: 'inline-hints'

          li class: 'string input optional stringish', id: "page_page_components_attributes_#{placeholder}_component_attributes_description_input" do
            label 'Description', for: "page_page_components_attributes_#{placeholder}_component_attributes_description", class: 'label'
            input value: component&.description || nil, type: 'text', required: 'required',
                  id: "page_page_components_attributes_#{placeholder}_component_attributes_description",
                  name: "page[page_components_attributes][#{placeholder}][component_attributes][description]"
          end
          li class: 'select input', id: "page_page_components_attributes_#{placeholder}_component_attributes_alignment_input" do
            label 'Alignment', for: "page_page_components_attributes_#{placeholder}_component_attributes_alignment", class: 'label'
            select value: component&.alignment || nil, required: 'required',
                   id: "page_page_components_attributes_#{placeholder}_component_attributes_alignment",
                   name: "page[page_components_attributes][#{placeholder}][component_attributes][alignment]" do
              option 'Left'
              %w(Center Right).each do |h|
                option h, value: h, selected: component&.alignment == h
              end
            end
            para 'Choose an alignment for this H3 component: Left, Center, or Right.', class: 'inline-hints'
          end

          li class: 'string input optional stringish', id: "page_page_components_attributes_#{placeholder}_component_attributes_url_input" do
          label 'URL', for: "page_page_components_attributes_#{placeholder}_component_attributes_text", class: 'label'
          input value: component&.url || nil, type: 'text', required: 'required',
                id: "page_page_components_attributes_#{placeholder}_component_attributes_url",
                name: "page[page_components_attributes][#{placeholder}][component_attributes][url]"
          para 'Optional. Enter a URL suffix to any internal page of the marketplace (Ex: "/innovations/vione" or a complete external URL (Ex.  https://www.va.gov/) that you would like the heading to link to', class: 'inline-hints'
          end
        end
      end
    end
  end
end

return html.to_s
